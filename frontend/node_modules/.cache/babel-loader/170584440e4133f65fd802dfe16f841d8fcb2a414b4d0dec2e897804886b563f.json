{"ast":null,"code":"import \"core-js/modules/es.array.some.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.some.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport { createRouter, createWebHistory } from 'vue-router';\nimport Home from '../views/Home.vue';\nimport Events from '../views/Events.vue';\nimport CreateEvent from '../views/CreateEvent.vue';\nimport Login from '../views/Login.vue';\nimport Register from '../views/Register.vue';\nimport Profile from '../views/Profile.vue';\nimport store from '../store';\nvar routes = [{\n  path: '/',\n  name: 'Home',\n  component: Home\n}, {\n  path: '/events',\n  name: 'Events',\n  component: Events\n}, {\n  path: '/events/create',\n  name: 'CreateEvent',\n  component: CreateEvent,\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: '/login',\n  name: 'Login',\n  component: Login,\n  meta: {\n    requiresGuest: true\n  }\n}, {\n  path: '/register',\n  name: 'Register',\n  component: Register,\n  meta: {\n    requiresGuest: true\n  }\n}, {\n  path: '/profile',\n  name: 'Profile',\n  component: Profile,\n  meta: {\n    requiresAuth: true\n  }\n}];\nvar router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes: routes\n});\nrouter.beforeEach(function (to, from, next) {\n  var isAuthenticated = store.getters.isAuthenticated;\n  if (to.matched.some(function (record) {\n    return record.meta.requiresAuth;\n  })) {\n    if (!isAuthenticated) {\n      next({\n        path: '/login',\n        query: {\n          redirect: to.fullPath\n        }\n      });\n    } else {\n      next();\n    }\n  } else if (to.matched.some(function (record) {\n    return record.meta.requiresGuest;\n  })) {\n    if (isAuthenticated) {\n      next('/');\n    } else {\n      next();\n    }\n  } else {\n    next();\n  }\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","Home","Events","CreateEvent","Login","Register","Profile","store","routes","path","name","component","meta","requiresAuth","requiresGuest","router","history","process","env","BASE_URL","beforeEach","to","from","next","isAuthenticated","getters","matched","some","record","query","redirect","fullPath"],"sources":["D:/eventfull/frontend/src/router/index.js"],"sourcesContent":["import { createRouter, createWebHistory } from 'vue-router'\r\nimport Home from '../views/Home.vue'\r\nimport Events from '../views/Events.vue'\r\nimport CreateEvent from '../views/CreateEvent.vue'\r\nimport Login from '../views/Login.vue'\r\nimport Register from '../views/Register.vue'\r\nimport Profile from '../views/Profile.vue'\r\nimport store from '../store'\r\n\r\nconst routes = [\r\n  {\r\n    path: '/',\r\n    name: 'Home',\r\n    component: Home\r\n  },\r\n  {\r\n    path: '/events',\r\n    name: 'Events',\r\n    component: Events\r\n  },\r\n  {\r\n    path: '/events/create',\r\n    name: 'CreateEvent',\r\n    component: CreateEvent,\r\n    meta: { requiresAuth: true }\r\n  },\r\n  {\r\n    path: '/login',\r\n    name: 'Login',\r\n    component: Login,\r\n    meta: { requiresGuest: true }\r\n  },\r\n  {\r\n    path: '/register',\r\n    name: 'Register',\r\n    component: Register,\r\n    meta: { requiresGuest: true }\r\n  },\r\n  {\r\n    path: '/profile',\r\n    name: 'Profile',\r\n    component: Profile,\r\n    meta: { requiresAuth: true }\r\n  }\r\n]\r\n\r\nconst router = createRouter({\r\n  history: createWebHistory(process.env.BASE_URL),\r\n  routes\r\n})\r\n\r\nrouter.beforeEach((to, from, next) => {\r\n  const isAuthenticated = store.getters.isAuthenticated\r\n\r\n  if (to.matched.some(record => record.meta.requiresAuth)) {\r\n    if (!isAuthenticated) {\r\n      next({\r\n        path: '/login',\r\n        query: { redirect: to.fullPath }\r\n      })\r\n    } else {\r\n      next()\r\n    }\r\n  } else if (to.matched.some(record => record.meta.requiresGuest)) {\r\n    if (isAuthenticated) {\r\n      next('/')\r\n    } else {\r\n      next()\r\n    }\r\n  } else {\r\n    next()\r\n  }\r\n})\r\n\r\nexport default router "],"mappings":";;;;AAAA,SAASA,YAAY,EAAEC,gBAAgB,QAAQ,YAAY;AAC3D,OAAOC,IAAI,MAAM,mBAAmB;AACpC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,WAAW,MAAM,0BAA0B;AAClD,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,OAAOC,KAAK,MAAM,UAAU;AAE5B,IAAMC,MAAM,GAAG,CACb;EACEC,IAAI,EAAE,GAAG;EACTC,IAAI,EAAE,MAAM;EACZC,SAAS,EAAEV;AACb,CAAC,EACD;EACEQ,IAAI,EAAE,SAAS;EACfC,IAAI,EAAE,QAAQ;EACdC,SAAS,EAAET;AACb,CAAC,EACD;EACEO,IAAI,EAAE,gBAAgB;EACtBC,IAAI,EAAE,aAAa;EACnBC,SAAS,EAAER,WAAW;EACtBS,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAK;AAC7B,CAAC,EACD;EACEJ,IAAI,EAAE,QAAQ;EACdC,IAAI,EAAE,OAAO;EACbC,SAAS,EAAEP,KAAK;EAChBQ,IAAI,EAAE;IAAEE,aAAa,EAAE;EAAK;AAC9B,CAAC,EACD;EACEL,IAAI,EAAE,WAAW;EACjBC,IAAI,EAAE,UAAU;EAChBC,SAAS,EAAEN,QAAQ;EACnBO,IAAI,EAAE;IAAEE,aAAa,EAAE;EAAK;AAC9B,CAAC,EACD;EACEL,IAAI,EAAE,UAAU;EAChBC,IAAI,EAAE,SAAS;EACfC,SAAS,EAAEL,OAAO;EAClBM,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAK;AAC7B,CAAC,CACF;AAED,IAAME,MAAM,GAAGhB,YAAY,CAAC;EAC1BiB,OAAO,EAAEhB,gBAAgB,CAACiB,OAAO,CAACC,GAAG,CAACC,QAAQ,CAAC;EAC/CX,MAAM,EAANA;AACF,CAAC,CAAC;AAEFO,MAAM,CAACK,UAAU,CAAC,UAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,EAAK;EACpC,IAAMC,eAAe,GAAGjB,KAAK,CAACkB,OAAO,CAACD,eAAe;EAErD,IAAIH,EAAE,CAACK,OAAO,CAACC,IAAI,CAAC,UAAAC,MAAM;IAAA,OAAIA,MAAM,CAAChB,IAAI,CAACC,YAAY;EAAA,EAAC,EAAE;IACvD,IAAI,CAACW,eAAe,EAAE;MACpBD,IAAI,CAAC;QACHd,IAAI,EAAE,QAAQ;QACdoB,KAAK,EAAE;UAAEC,QAAQ,EAAET,EAAE,CAACU;QAAS;MACjC,CAAC,CAAC;IACJ,CAAC,MAAM;MACLR,IAAI,CAAC,CAAC;IACR;EACF,CAAC,MAAM,IAAIF,EAAE,CAACK,OAAO,CAACC,IAAI,CAAC,UAAAC,MAAM;IAAA,OAAIA,MAAM,CAAChB,IAAI,CAACE,aAAa;EAAA,EAAC,EAAE;IAC/D,IAAIU,eAAe,EAAE;MACnBD,IAAI,CAAC,GAAG,CAAC;IACX,CAAC,MAAM;MACLA,IAAI,CAAC,CAAC;IACR;EACF,CAAC,MAAM;IACLA,IAAI,CAAC,CAAC;EACR;AACF,CAAC,CAAC;AAEF,eAAeR,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}