{"ast":null,"code":"import { ref, onMounted } from 'vue';\nimport axios from 'axios';\nexport default {\n  name: 'Events',\n  setup() {\n    const events = ref([]);\n    const loading = ref(true);\n    const error = ref(null);\n    const fetchEvents = async () => {\n      try {\n        loading.value = true;\n        error.value = null;\n        const response = await axios.get('http://localhost:8000/events/');\n        events.value = response.data;\n      } catch (err) {\n        error.value = 'Ошибка при загрузке событий';\n        console.error('Error fetching events:', err);\n      } finally {\n        loading.value = false;\n      }\n    };\n    const formatDate = date => {\n      return new Date(date).toLocaleDateString('ru-RU', {\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric',\n        hour: '2-digit',\n        minute: '2-digit'\n      });\n    };\n    const joinEvent = async eventId => {\n      try {\n        // TODO: Implement event joining logic\n        console.log('Joining event:', eventId);\n      } catch (err) {\n        console.error('Error joining event:', err);\n      }\n    };\n    onMounted(() => {\n      fetchEvents();\n    });\n    return {\n      events,\n      loading,\n      error,\n      formatDate,\n      joinEvent\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","axios","name","setup","events","loading","error","fetchEvents","value","response","get","data","err","console","formatDate","date","Date","toLocaleDateString","year","month","day","hour","minute","joinEvent","eventId","log"],"sources":["D:\\eventfull\\frontend\\src\\views\\Events.vue"],"sourcesContent":["<template>\r\n  <div class=\"max-w-7xl mx-auto py-6 sm:px-6 lg:px-8\">\r\n    <div class=\"px-4 py-6 sm:px-0\">\r\n      <div class=\"flex justify-between items-center mb-6\">\r\n        <h1 class=\"text-3xl font-bold text-gray-900\">События</h1>\r\n        <router-link\r\n          to=\"/events/create\"\r\n          class=\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700\"\r\n        >\r\n          Создать событие\r\n        </router-link>\r\n      </div>\r\n\r\n      <!-- Loading state -->\r\n      <div v-if=\"loading\" class=\"text-center py-12\">\r\n        <div class=\"animate-spin rounded-full h-12 w-12 border-b-2 border-indigo-600 mx-auto\"></div>\r\n        <p class=\"mt-4 text-gray-600\">Загрузка событий...</p>\r\n      </div>\r\n\r\n      <!-- Error state -->\r\n      <div v-else-if=\"error\" class=\"text-center py-12\">\r\n        <p class=\"text-red-600\">{{ error }}</p>\r\n      </div>\r\n\r\n      <!-- Empty state -->\r\n      <div v-else-if=\"!events.length\" class=\"text-center py-12\">\r\n        <p class=\"text-gray-600\">Пока нет событий</p>\r\n      </div>\r\n\r\n      <!-- Events list -->\r\n      <div v-else class=\"grid gap-6 md:grid-cols-2 lg:grid-cols-3\">\r\n        <div\r\n          v-for=\"event in events\"\r\n          :key=\"event.id\"\r\n          class=\"bg-white overflow-hidden shadow rounded-lg\"\r\n        >\r\n          <div class=\"p-6\">\r\n            <div class=\"flex items-center\">\r\n              <div class=\"flex-1\">\r\n                <h3 class=\"text-lg font-medium text-gray-900\">{{ event.title }}</h3>\r\n                <p class=\"mt-1 text-sm text-gray-500\">{{ event.category }}</p>\r\n              </div>\r\n              <div class=\"ml-4\">\r\n                <span class=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium\" :class=\"event.price === 0 ? 'bg-green-100 text-green-800' : 'bg-blue-100 text-blue-800'\">\r\n                  {{ event.price === 0 ? 'Бесплатно' : `${event.price} ₽` }}\r\n                </span>\r\n              </div>\r\n            </div>\r\n            <p class=\"mt-3 text-sm text-gray-500\">{{ event.description }}</p>\r\n            <div class=\"mt-4\">\r\n              <div class=\"flex items-center text-sm text-gray-500\">\r\n                <svg class=\"flex-shrink-0 mr-1.5 h-5 w-5 text-gray-400\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n                  <path fill-rule=\"evenodd\" d=\"M6 2a1 1 0 00-1 1v1H4a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2h-1V3a1 1 0 10-2 0v1H7V3a1 1 0 00-1-1zm0 5a1 1 0 000 2h8a1 1 0 100-2H6z\" clip-rule=\"evenodd\" />\r\n                </svg>\r\n                {{ formatDate(event.date) }}\r\n              </div>\r\n              <div class=\"mt-2 flex items-center text-sm text-gray-500\">\r\n                <svg class=\"flex-shrink-0 mr-1.5 h-5 w-5 text-gray-400\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n                  <path fill-rule=\"evenodd\" d=\"M5.05 4.05a7 7 0 119.9 9.9L10 18.9l-4.95-4.95a7 7 0 010-9.9zM10 11a2 2 0 100-4 2 2 0 000 4z\" clip-rule=\"evenodd\" />\r\n                </svg>\r\n                {{ event.location }}\r\n              </div>\r\n            </div>\r\n            <div class=\"mt-4 flex justify-between items-center\">\r\n              <div class=\"text-sm text-gray-500\">\r\n                {{ event.participants.length }}/{{ event.max_participants }} участников\r\n              </div>\r\n              <button\r\n                class=\"inline-flex items-center px-3 py-1.5 border border-transparent text-xs font-medium rounded-full text-indigo-700 bg-indigo-100 hover:bg-indigo-200\"\r\n                @click=\"joinEvent(event.id)\"\r\n              >\r\n                Участвовать\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, onMounted } from 'vue'\r\nimport axios from 'axios'\r\n\r\nexport default {\r\n  name: 'Events',\r\n  setup() {\r\n    const events = ref([])\r\n    const loading = ref(true)\r\n    const error = ref(null)\r\n\r\n    const fetchEvents = async () => {\r\n      try {\r\n        loading.value = true\r\n        error.value = null\r\n        const response = await axios.get('http://localhost:8000/events/')\r\n        events.value = response.data\r\n      } catch (err) {\r\n        error.value = 'Ошибка при загрузке событий'\r\n        console.error('Error fetching events:', err)\r\n      } finally {\r\n        loading.value = false\r\n      }\r\n    }\r\n\r\n    const formatDate = (date) => {\r\n      return new Date(date).toLocaleDateString('ru-RU', {\r\n        year: 'numeric',\r\n        month: 'long',\r\n        day: 'numeric',\r\n        hour: '2-digit',\r\n        minute: '2-digit'\r\n      })\r\n    }\r\n\r\n    const joinEvent = async (eventId) => {\r\n      try {\r\n        // TODO: Implement event joining logic\r\n        console.log('Joining event:', eventId)\r\n      } catch (err) {\r\n        console.error('Error joining event:', err)\r\n      }\r\n    }\r\n\r\n    onMounted(() => {\r\n      fetchEvents()\r\n    })\r\n\r\n    return {\r\n      events,\r\n      loading,\r\n      error,\r\n      formatDate,\r\n      joinEvent\r\n    }\r\n  }\r\n}\r\n</script> "],"mappings":"AAkFA,SAASA,GAAG,EAAEC,SAAQ,QAAS,KAAI;AACnC,OAAOC,KAAI,MAAO,OAAM;AAExB,eAAe;EACbC,IAAI,EAAE,QAAQ;EACdC,KAAKA,CAAA,EAAG;IACN,MAAMC,MAAK,GAAIL,GAAG,CAAC,EAAE;IACrB,MAAMM,OAAM,GAAIN,GAAG,CAAC,IAAI;IACxB,MAAMO,KAAI,GAAIP,GAAG,CAAC,IAAI;IAEtB,MAAMQ,WAAU,GAAI,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACFF,OAAO,CAACG,KAAI,GAAI,IAAG;QACnBF,KAAK,CAACE,KAAI,GAAI,IAAG;QACjB,MAAMC,QAAO,GAAI,MAAMR,KAAK,CAACS,GAAG,CAAC,+BAA+B;QAChEN,MAAM,CAACI,KAAI,GAAIC,QAAQ,CAACE,IAAG;MAC7B,EAAE,OAAOC,GAAG,EAAE;QACZN,KAAK,CAACE,KAAI,GAAI,6BAA4B;QAC1CK,OAAO,CAACP,KAAK,CAAC,wBAAwB,EAAEM,GAAG;MAC7C,UAAU;QACRP,OAAO,CAACG,KAAI,GAAI,KAAI;MACtB;IACF;IAEA,MAAMM,UAAS,GAAKC,IAAI,IAAK;MAC3B,OAAO,IAAIC,IAAI,CAACD,IAAI,CAAC,CAACE,kBAAkB,CAAC,OAAO,EAAE;QAChDC,IAAI,EAAE,SAAS;QACfC,KAAK,EAAE,MAAM;QACbC,GAAG,EAAE,SAAS;QACdC,IAAI,EAAE,SAAS;QACfC,MAAM,EAAE;MACV,CAAC;IACH;IAEA,MAAMC,SAAQ,GAAI,MAAOC,OAAO,IAAK;MACnC,IAAI;QACF;QACAX,OAAO,CAACY,GAAG,CAAC,gBAAgB,EAAED,OAAO;MACvC,EAAE,OAAOZ,GAAG,EAAE;QACZC,OAAO,CAACP,KAAK,CAAC,sBAAsB,EAAEM,GAAG;MAC3C;IACF;IAEAZ,SAAS,CAAC,MAAM;MACdO,WAAW,CAAC;IACd,CAAC;IAED,OAAO;MACLH,MAAM;MACNC,OAAO;MACPC,KAAK;MACLQ,UAAU;MACVS;IACF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}